image: docker:latest
services:
    - docker:dind

variables:
    APP_NAME: 'node'
    REGISTRY_USER: 'admin'
    REGISTRY_PASSWORD: 'ibsvo2983asd'
    PRIVATE_DEV_REGISTRY: 'nexus.smartiys.io:5000'
    PRIVATE_PROD_REGISTRY: 'nexus.smartiys.io:5001'
    PROD_IMAGE_TAG: '$PRIVATE_PROD_REGISTRY/$APP_NAME:$CI_COMMIT_TAG'

stages:
    - build
    - package
    - deploy

build:
    image: node:12.14-slim
    stage: build
    before_script:
        - 'npm install --only=production'
    script:
        - npm run build
    only:
        - /^v.*$/
        - /^release-.*$/
    except:
        - branches

package:
    stage: package
    script:
        - docker build -t $PRIVATE_DEV_REGISTRY/$APP_NAME .
        - docker login -u $REGISTRY_USER -p $REGISTRY_PASSWORD $PRIVATE_DEV_REGISTRY
        - docker push $PRIVATE_DEV_REGISTRY/$APP_NAME
    only:
        - /^v.*$/
    except:
        - branches

package_prod:
    stage: package
    script:
        - docker build -t $PROD_IMAGE_TAG .
        - docker login -u $REGISTRY_USER -p $REGISTRY_PASSWORD $PRIVATE_PROD_REGISTRY
        - docker push $PROD_IMAGE_TAG
    after_script:
        - docker rmi $PROD_IMAGE_TAG
    only:
        - /^release-.*$/
    except:
        - branches

deploy_staging:
    stage: deploy
    script:
        - apk upgrade && apk update
        - apk add openssh-client
        - apk add sshpass
        - sshpass -p "MTsmart44" ssh -o StrictHostKeyChecking=no test@test.smartiys.io "docker ps -a | awk '{ print \$1,\$2 }' | grep $APP_NAME | awk '{print \$1 }' | xargs -I {} docker container stop {} && docker ps -a | awk '{ print \$1,\$2 }' | grep $APP_NAME | awk '{print \$1 }' | xargs -I {} docker rm -v {} && docker rmi $PRIVATE_DEV_REGISTRY/$APP_NAME || true"
        - sshpass -p "MTsmart44" ssh -o StrictHostKeyChecking=no test@test.smartiys.io docker login -u $REGISTRY_USER -p $REGISTRY_PASSWORD $PRIVATE_DEV_REGISTRY
        - sshpass -p "MTsmart44" ssh -o StrictHostKeyChecking=no test@test.smartiys.io docker pull $PRIVATE_DEV_REGISTRY/$APP_NAME
        - sshpass -p "MTsmart44" ssh -o StrictHostKeyChecking=no test@test.smartiys.io docker run --name $APP_NAME-$CI_COMMIT_TAG --network=dev-net --net-alias=$APP_NAME.smart -p 3000:3000 -e NODE_ENV=production -e PORT=3000 -e DB_HOST=test.smartiys.io -e DB_USER=postgres -e DB_PASSWORD=1234 -e DB_NAME=postgres -d $PRIVATE_DEV_REGISTRY/$APP_NAME
    after_script:
        - docker rmi $PRIVATE_DEV_REGISTRY/$APP_NAME
    only:
        - /^v.*$/
    except:
        - branches
